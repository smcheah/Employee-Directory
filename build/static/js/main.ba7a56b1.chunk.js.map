{"version":3,"sources":["components/Navbar.js","components/EmployeeModal/EmployeeModal.js","components/EmployeeList/EmployeeList.js","components/SearchAndSort/Search.js","components/SearchAndSort/SortBy.js","components/MainPage.js","components/Footer.js","App.js","index.js"],"names":["Navbar","href","EmployeeModal","toggleModal","isDisplayed","employeeInfo","handleCloseModal","id","name","image","role","gender","dateOfBirth","email","className","src","alt","target","rel","onClick","EmployeeList","handleShowModal","results","e","Search","search","onChangeHandler","handleSearch","handleReset","htmlFor","type","value","onChange","placeholder","SortBy","sortByNum","sortBy","sortByDOB","MainPage","employees","useState","modal","setModal","employeeList","sortedList","setSortedList","sortToggle","setSortToggle","setSearch","data","preventDefault","sortFrom","a","b","char","from","to","charA","toUpperCase","charB","handleFilter","result","parseInt","filter","sort","arrA","split","arrB","Date","dateA","stopPropagation","map","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"yNAQeA,EANA,WACX,OAAO,8BACH,mBAAGC,KAAK,IAAR,8B,8BCgCOC,G,MAjCO,SAAC,GAAqD,IACpEC,EADiBC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,iBAGhD,GAAIF,EAAa,CACbD,EAAc,sBADD,IAGLI,EAAsDF,EAAtDE,GAAIC,EAAkDH,EAAlDG,KAAMC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,KAAMC,EAA+BN,EAA/BM,OAAQC,EAAuBP,EAAvBO,YAAaC,EAAUR,EAAVQ,MAEpD,OAAO,qBAAKC,UAAYX,EAAjB,SACH,sBAAKW,UAAU,aAAf,UACI,sBAAKA,UAAU,eAAf,UACI,6BAAMN,IACN,kCAAMD,QAEV,sBAAKO,UAAU,iBAAf,UACI,qBAAKC,IAAMN,EAAQO,IAAI,sBACvB,mBAAGf,KAAK,uBAAuBgB,OAAO,SAASC,IAAI,aAAnD,yBAEJ,sBAAKJ,UAAU,aAAf,UACI,4BAAKJ,IACL,yCAAaC,KACb,gDAAoBC,KACpB,0CAAcC,QAElB,wBAAQM,QAAUb,EAAmBQ,UAAU,qBAA/C,wBAMZ,OADAX,EAAc,qBACP,OChBIiB,G,MAdM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC7Bd,EAAsDc,EAAtDd,KAAMD,EAAgDe,EAAhDf,GAAIE,EAA4Ca,EAA5Cb,MAAOC,EAAqCY,EAArCZ,KAAMC,EAA+BW,EAA/BX,OAAQC,EAAuBU,EAAvBV,YAAaC,EAAUS,EAAVT,MAEpD,OAAO,qBAAIC,UAAU,WAAsBK,QAAU,SAACI,GAAD,OAAOF,EAAgB,CAAEb,OAAMD,KAAIE,QAAOC,OAAMC,SAAQC,cAAaC,SAASU,IAA5H,UACH,6BAAMhB,IACN,6BAAMC,IACN,6BAAME,IACN,6BAAMC,IACN,6BAAMC,IACN,6BAAMC,MAN4BN,KCM3BiB,G,KATA,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACrD,OAAO,sBAAKd,UAAU,SAAf,UACH,uBAAOe,QAAQ,cAAf,kCACA,uBAAOC,KAAK,SAAStB,KAAK,SAASD,GAAG,cAAcwB,MAAQN,EAASO,SAAWN,EAAkBO,YAAY,gBAC9G,wBAAQd,QAAUQ,EAAlB,oBACA,wBAAQR,QAAUS,EAAlB,wBCMOM,EAXA,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACjC,OAAO,sBAAKvB,UAAU,UAAf,UACH,6CACA,wBAAQK,QAAUgB,EAAlB,gBACA,wBAAQhB,QAAU,SAAAI,GAAC,OAAIa,EAAO,OAAQb,IAAtC,kBACA,wBAAQJ,QAAU,SAAAI,GAAC,OAAIa,EAAO,OAAQb,IAAtC,kBACA,wBAAQJ,QAAU,SAAAI,GAAC,OAAIa,EAAO,SAAUb,IAAxC,oBACA,wBAAQJ,QAAUkB,EAAlB,+BCmKOC,EAvKE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAGNC,mBAAS,CAC/BpC,aAAa,EACbC,aAAc,KALc,mBAGzBoC,EAHyB,KAGlBC,EAHkB,OAOIF,mBAAS,CACzCG,aAAcJ,IARc,mBAOzBK,EAPyB,KAObC,EAPa,OAUIL,oBAAS,GAVb,mBAUzBM,EAVyB,KAUbC,EAVa,OAWJP,mBAAS,IAXL,mBAWzBf,EAXyB,KAWjBuB,EAXiB,KAc1B3B,EAAkB,SAAC4B,EAAM1B,GAC3BA,EAAE2B,iBACFR,EAAS,CAAEtC,aAAa,EAAMC,aAAc4C,KAS1CE,EAAW,SAACC,EAAGC,EAAGC,EAAMC,EAAMC,GAChC,IAAIC,EAAQL,EAAEE,GAAMI,cAChBC,EAAQN,EAAEC,GAAMI,cACpB,OAAID,EAAQE,EAAcJ,EACtBE,EAAQE,EAAcH,EACnB,GA+DLI,EAAe,SAACX,GAClB,IAAMY,EAASpC,EAAOiC,cACdlD,EAA+CyC,EAA/CzC,KAAMD,EAAyC0C,EAAzC1C,GAAIG,EAAqCuC,EAArCvC,KAAMC,EAA+BsC,EAA/BtC,OAAQC,EAAuBqC,EAAvBrC,YAAaC,EAAUoC,EAAVpC,MAE7C,OAAIL,EAAKkD,gBAAkBG,GACvBC,SAASvD,KAAQuD,SAASrC,IAC1Bf,EAAKgD,gBAAkBG,GACvBlD,EAAO+C,gBAAkBG,GACzBjD,IAAgBa,GAChBZ,EAAM6C,gBAAkBG,GAK1BlC,EAAY,uCAAG,WAAOJ,GAAP,eAAA6B,EAAA,6DACjB7B,EAAE2B,iBACFL,EAAc,CAAEF,aAAcJ,IAC9BS,EAAUvB,GAHO,SAKImB,EAAWD,aAAaoB,OAAOH,GALnC,OAKXC,EALW,OAMjBhB,EAAc,CAAEF,aAAckB,IANb,2CAAH,sDAiBlB,OAAO,iCACH,oDAEA,uBAAM/C,UAAU,gBAAhB,UACI,cAAC,EAAD,CACIW,OAASA,EACTC,gBAdY,SAACH,GAAD,OAAOyB,EAAUzB,EAAEN,OAAOc,QAetCJ,aAAeA,EACfC,YAdQ,SAACL,GACjBA,EAAE2B,iBACFF,EAAU,IACVH,EAAc,CAAEF,aAAcJ,OAY1B,cAAC,EAAD,CACIJ,UAxDM,SAACZ,GACfA,EAAE2B,kBACiB,IAAfJ,GACAC,GAAc,GACdH,EAAWD,aAAaqB,MAAK,SAACZ,EAAGC,GAC7B,OAAOD,EAAE7C,GAAK8C,EAAE9C,QAGpBwC,GAAc,GACdH,EAAWD,aAAaqB,MAAK,SAACZ,EAAGC,GAC7B,OAAOA,EAAE9C,GAAK6C,EAAE7C,QA+ChB6B,OAtGG,SAACkB,EAAM/B,GAClBA,EAAE2B,kBAEiB,IAAfJ,GACAC,GAAc,GACdH,EAAWD,aAAaqB,MAAK,SAAUZ,EAAGC,GACtC,OAAOF,EAASC,EAAGC,EAAGC,GAAO,EAAG,QAGpCP,GAAc,GACdH,EAAWD,aAAaqB,MAAK,SAAUZ,EAAGC,GACtC,OAAOF,EAASC,EAAGC,EAAGC,EAAM,GAAI,OAGxCT,EAAc,CAAEF,aAAcC,EAAWD,gBAyFjCN,UAtFM,SAACd,GACfA,EAAE2B,kBAGiB,IAAfJ,GACAC,GAAc,GACdH,EAAWD,aAAaqB,MAAK,SAAUZ,EAAGC,GACtC,IAAIY,EAAOb,EAAExC,YAAYsD,MAAM,KAC3BC,EAAOd,EAAEzC,YAAYsD,MAAM,KAI/B,OAHY,IAAIE,KAAKH,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAChC,IAAIG,KAAKD,EAAK,GAAIA,EAAK,GAAIA,EAAK,SAKhDpB,GAAc,GACdH,EAAWD,aAAaqB,MAAK,SAAUZ,EAAGC,GACtC,IAAIY,EAAOb,EAAExC,YAAYsD,MAAM,KAC3BC,EAAOd,EAAEzC,YAAYsD,MAAM,KAC3BG,EAAQ,IAAID,KAAKH,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5C,OAFY,IAAIG,KAAKD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE7BE,MAGvBxB,EAAc,CAAEF,aAAcC,EAAWD,qBAgEzC,cAAC,EAAD,CACIvC,YAAcqC,EAAMrC,YACpBC,aAAeoC,EAAMpC,aACrBC,iBA5HiB,SAACiB,GACtBA,EAAE2B,iBACF3B,EAAE+C,kBACF5B,EAAS,CAAEtC,aAAa,OA2HxB,kCACI,gCACI,qBAAIU,UAAU,WAAd,UACI,oCACA,sCACA,sCACA,wCACA,+CACA,4CAGR,gCACM8B,EAAWD,aAAa4B,KAAI,SAAAjD,GAAO,OACjC,cAAC,EAAD,CACID,gBAAkBA,EAClBC,QAAUA,gBC7JnBkD,EANA,WACX,OAAO,iCACH,8BAAG,mBAAGvE,KAAK,6BAA6BgB,OAAO,SAASC,IAAI,aAAzD,0BAAH,mB,OCaOuD,EATH,WAER,OAAO,qCACH,cAAC,EAAD,IACA,cAAC,EAAD,eAAe,CAAElC,eACjB,cAAC,EAAD,QCTRmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.ba7a56b1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n    return <nav>\r\n        <a href=\"/\">HELLO COMPANY</a>\r\n    </nav>;\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst EmployeeModal = ({ isDisplayed, employeeInfo, handleCloseModal }) => {\r\n    let toggleModal;\r\n\r\n    if (isDisplayed) {\r\n        toggleModal = \"modal display-block\";\r\n\r\n        const { id, name, image, role, gender, dateOfBirth, email } = employeeInfo;\r\n\r\n        return <div className={ toggleModal }>\r\n            <div className=\"modal-main\">\r\n                <div className=\"modal-header\">\r\n                    <h1>{ name }</h1>\r\n                    <p>#{ id }</p>\r\n                </div>\r\n                <div className=\"modal-portrait\">\r\n                    <img src={ image } alt=\"employee portrait\" />\r\n                    <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n                </div>\r\n                <div className=\"modal-info\">\r\n                    <p>{ role }</p>\r\n                    <p>Gender: { gender }</p>\r\n                    <p>Date of birth: { dateOfBirth }</p>\r\n                    <p>Contact: { email }</p>\r\n                </div>\r\n                <button onClick={ handleCloseModal } className=\"modal-close-button\">close</button>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    toggleModal = \"modal display-none\";\r\n    return null;\r\n};\r\n\r\nexport default EmployeeModal;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst EmployeeList = ({ handleShowModal, results }) => {\r\n    const { name, id, image, role, gender, dateOfBirth, email } = results;\r\n\r\n    return <tr className=\"employee\" key={ id } onClick={ (e) => handleShowModal({ name, id, image, role, gender, dateOfBirth, email }, e) }>\r\n        <td>{ id }</td>\r\n        <td>{ name }</td>\r\n        <td>{ role }</td>\r\n        <td>{ gender }</td>\r\n        <td>{ dateOfBirth }</td>\r\n        <td>{ email }</td>\r\n    </tr>;\r\n\r\n};\r\n\r\nexport default EmployeeList;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Search = ({ search, onChangeHandler, handleSearch, handleReset }) => {\r\n    return <div className=\"search\">\r\n        <label htmlFor=\"searchInput\">Enter a search term:</label>\r\n        <input type=\"search\" name=\"search\" id=\"searchInput\" value={ search } onChange={ onChangeHandler } placeholder=\"search term\" />\r\n        <button onClick={ handleSearch }>Search</button>\r\n        <button onClick={ handleReset }>Reset</button>\r\n    </div>;\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SortBy = ({ sortByNum, sortBy, sortByDOB }) => {\r\n    return <div className=\"sort-by\">\r\n        <label>Sort by:</label>\r\n        <button onClick={ sortByNum }>ID</button>\r\n        <button onClick={ e => sortBy(\"name\", e) }>Name</button>\r\n        <button onClick={ e => sortBy(\"role\", e) }>Role</button>\r\n        <button onClick={ e => sortBy(\"gender\", e) }>Gender</button>\r\n        <button onClick={ sortByDOB }>Date of birth</button>\r\n    </div>;\r\n};\r\n\r\nexport default SortBy;","import React, { useState } from \"react\";\r\nimport EmployeeModal from \"./EmployeeModal/EmployeeModal\";\r\nimport EmployeeList from \"./EmployeeList/EmployeeList\";\r\nimport Search from \"./SearchAndSort/Search\";\r\nimport SortBy from \"./SearchAndSort/SortBy\";\r\n\r\nconst MainPage = ({ employees }) => {\r\n\r\n    // state\r\n    const [modal, setModal] = useState({\r\n        isDisplayed: false,\r\n        employeeInfo: \"\"\r\n    });\r\n    const [sortedList, setSortedList] = useState({\r\n        employeeList: employees\r\n    });\r\n    const [sortToggle, setSortToggle] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    // modal\r\n    const handleShowModal = (data, e) => {\r\n        e.preventDefault();\r\n        setModal({ isDisplayed: true, employeeInfo: data });\r\n    };\r\n    const handleCloseModal = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setModal({ isDisplayed: false });\r\n    };\r\n\r\n    // search and sort\r\n    const sortFrom = (a, b, char, from, to) => {\r\n        let charA = a[char].toUpperCase();\r\n        let charB = b[char].toUpperCase();\r\n        if (charA < charB) return from;\r\n        if (charA > charB) return to;\r\n        return 0;\r\n    };\r\n\r\n    const sortBy = (char, e) => {\r\n        e.preventDefault();\r\n\r\n        if (sortToggle === false) {\r\n            setSortToggle(true);\r\n            sortedList.employeeList.sort(function (a, b) {\r\n                return sortFrom(a, b, char, -1, 1);\r\n            });\r\n        } else {\r\n            setSortToggle(false);\r\n            sortedList.employeeList.sort(function (a, b) {\r\n                return sortFrom(a, b, char, 1, -1);\r\n            });\r\n        }\r\n        setSortedList({ employeeList: sortedList.employeeList });\r\n    };\r\n\r\n    const sortByDOB = (e) => {\r\n        e.preventDefault();\r\n\r\n        // sort by value\r\n        if (sortToggle === false) {\r\n            setSortToggle(true);\r\n            sortedList.employeeList.sort(function (a, b) {\r\n                let arrA = a.dateOfBirth.split(\"/\");\r\n                let arrB = b.dateOfBirth.split(\"/\");\r\n                let dateA = new Date(arrA[2], arrA[1], arrA[0]);\r\n                let dateB = new Date(arrB[2], arrB[1], arrB[0]);\r\n\r\n                return dateA - dateB;\r\n            });\r\n        } else {\r\n            setSortToggle(false);\r\n            sortedList.employeeList.sort(function (a, b) {\r\n                let arrA = a.dateOfBirth.split(\"/\");\r\n                let arrB = b.dateOfBirth.split(\"/\");\r\n                let dateA = new Date(arrA[2], arrA[1], arrA[0]);\r\n                let dateB = new Date(arrB[2], arrB[1], arrB[0]);\r\n\r\n                return dateB - dateA;\r\n            });\r\n        }\r\n        setSortedList({ employeeList: sortedList.employeeList });\r\n    };\r\n\r\n    const sortByNum = (e) => {\r\n        e.preventDefault();\r\n        if (sortToggle === false) {\r\n            setSortToggle(true);\r\n            sortedList.employeeList.sort((a, b) => {\r\n                return a.id - b.id;\r\n            });\r\n        } else {\r\n            setSortToggle(false);\r\n            sortedList.employeeList.sort((a, b) => {\r\n                return b.id - a.id;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleFilter = (data) => {\r\n        const result = search.toUpperCase();\r\n        const { name, id, role, gender, dateOfBirth, email } = data;\r\n\r\n        if (name.toUpperCase() === result ||\r\n            parseInt(id) === parseInt(search) ||\r\n            role.toUpperCase() === result ||\r\n            gender.toUpperCase() === result ||\r\n            dateOfBirth === search ||\r\n            email.toUpperCase() === result) {\r\n            return true;\r\n        } return false;\r\n    };\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        setSortedList({ employeeList: employees });\r\n        setSearch(search);\r\n\r\n        const result = await sortedList.employeeList.filter(handleFilter);\r\n        setSortedList({ employeeList: result });\r\n    };\r\n\r\n    const onChangeHandler = (e) => setSearch(e.target.value);\r\n\r\n    const handleReset = (e) => {\r\n        e.preventDefault();\r\n        setSearch(\"\");\r\n        setSortedList({ employeeList: employees });\r\n    };\r\n\r\n    return <main>\r\n        <h1>Employee Directory</h1>\r\n\r\n        <form className=\"searchandsort\">\r\n            <Search\r\n                search={ search }\r\n                onChangeHandler={ onChangeHandler }\r\n                handleSearch={ handleSearch }\r\n                handleReset={ handleReset } />\r\n            <SortBy\r\n                sortByNum={ sortByNum }\r\n                sortBy={ sortBy }\r\n                sortByDOB={ sortByDOB } />\r\n        </form>\r\n\r\n        <EmployeeModal\r\n            isDisplayed={ modal.isDisplayed }\r\n            employeeInfo={ modal.employeeInfo }\r\n            handleCloseModal={ handleCloseModal } />\r\n\r\n        <table>\r\n            <thead>\r\n                <tr className=\"employee\">\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Role</th>\r\n                    <th>Gender</th>\r\n                    <th>Date of birth</th>\r\n                    <th>Email</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { sortedList.employeeList.map(results => (\r\n                    <EmployeeList\r\n                        handleShowModal={ handleShowModal }\r\n                        results={ results } />\r\n                )) }\r\n            </tbody>\r\n        </table>\r\n    </main>;\r\n\r\n};\r\n\r\nexport default MainPage;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n        <p><a href=\"https://github.com/smcheah\" target=\"_blank\" rel=\"noreferrer\">Simone Cheah</a> &copy; 2021</p>\r\n    </footer>;\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport MainPage from \"./components/MainPage\";\nimport Footer from \"./components/Footer\";\n\nimport employees from \"./data/employees.json\";\n\n// the table of contents\nconst App = () => {\n\n    return <>\n        <Navbar />\n        <MainPage { ...{ employees } } />\n        <Footer />\n    </ >;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n  \nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}